#!/bin/env bash

main() {
  [[ -f ${deckfile:=$*} ]] || ERX no such file

  terminal_width=$(tput cols)
  terminal_height=$(tput lines)

  mapfile -t slides < "$deckfile"

  for slide in "${slides[@]}"; do

    page=""
    mapfile -t lines <<< "${slide//_/$'\n'}"
    for line in "${lines[@]}"; do
      page+=$'\n'$(center_h "$(figlet -t -f /usr/share/figlet/ANSI\ Shadow.flf "$line")")
    done

    center_v "$page" | lolcat -f

  done | less -r
}

center_v(){
  local block block_height blank_lines vpad

  block="$1"

  block_height=$(echo "$block" | wc -l)
  blank_lines=$((terminal_height - block_height))

  vpad1=$((blank_lines / 2))
  vpad2=$((blank_lines - vpad1))

  vpad1=$(printf "%${vpad1}s" " ")
  vpad1=${vpad1// /$'\n'}

  vpad2=$(printf "%${vpad2}s" " ")
  vpad2=${vpad2// /$'\n'}

  vpad=$(printf "%$((blank_lines / 2))s" " ")
  vpad=${vpad// /$'\n'}

  printf '%s' "$vpad1" "$block" "$vpad2"
}

center_h(){
  local block_width hpad block blank_columns

  block=$1
  block_width=$(echo "$block" | wc -L)
  blank_columns=$((terminal_width - block_width))
  hpad=$(printf "%$((blank_columns / 2))s" " ")

  echo "$hpad${block//$'\n'/$'\n'${hpad}}"
}

set -E
trap '[ "$?" -ne 77 ] || exit 77' ERR

ERM(){

  local mode

  getopts xr mode
  case "$mode" in
    x ) urg=critical ; prefix='[ERROR]: '   ;;
    r ) urg=low      ; prefix='[WARNING]: ' ;;
    * ) urg=normal   ; mode=m ;;
  esac
  shift $((OPTIND-1))

  msg="${prefix}$*"

  if [[ -t 2 ]]; then
    echo "$msg" >&2
  else
    notify-send -u "$urg" "$msg"
  fi

  [[ $mode = x ]] && exit 77
}

ERX() { ERM -x "$*" ;}
ERR() { ERM -r "$*" ;}

DEATH() { :;}

trap DEATH EXIT

main "$@"
